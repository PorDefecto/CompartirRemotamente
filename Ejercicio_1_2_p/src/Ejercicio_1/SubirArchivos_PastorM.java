package Ejercicio_1;
import Ejercicio_1.JTreeFile;
import java.awt.Desktop;
import java.awt.Dimension;
import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.JOptionPane;
//Libreria para mover
import java.nio.file.*;
//Libreria metadato

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Equipo
 */
public class SubirArchivos_PastorM extends javax.swing.JFrame {

    String ruta = "", nombre = "", definicion = "", extension = "", rutaactual = "";
    int tamanio = 0;
    
    public SubirArchivos_PastorM() {
        initComponents();
        rutaactual();
        JTreeFile jTreeFiles = new JTreeFile();
jTreeFiles.setJTree(jTree1);
jTreeFiles.init();
txtRutaActual.setEditable(false);
limpiartabla();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoExtensiones = new javax.swing.ButtonGroup();
        btnSeleccionar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblmemoria = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMetadatos = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtRutaActual = new javax.swing.JTextField();
        cambiarDestino = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        splimitar = new javax.swing.JSpinner();
        cmbopcion = new javax.swing.JComboBox<>();
        lbl6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbldatos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSeleccionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ejercicio_1/archivo.png"))); // NOI18N
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ejercicio_1/disco-flexible.png"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Extensiones");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("TAMAÑO DEL ARCHIVO ");

        lblmemoria.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblmemoria.setText("*******");

        txtMetadatos.setColumns(20);
        txtMetadatos.setRows(5);
        jScrollPane1.setViewportView(txtMetadatos);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Limitar Tamaño Kb");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Seleccione un archivo");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Directorio actual de guardado");

        cambiarDestino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ejercicio_1/busqueda.png"))); // NOI18N
        cambiarDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarDestinoActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTree1);

        cmbopcion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbopcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Word", "Excel", "PowerPoint", "Ficheros", "Todos" }));

        lbl6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        tbldatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tbldatos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(cmbopcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(splimitar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnSeleccionar)))))
                        .addGap(26, 26, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtRutaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cambiarDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGuardar)
                        .addGap(108, 108, 108)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lblmemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl6, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblmemoria)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(11, 11, 11)
                        .addComponent(cmbopcion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(splimitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSeleccionar)
                            .addComponent(jLabel4))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRutaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cambiarDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lbl6)
                                .addGap(115, 115, 115))
                            .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   DefaultTableModel dtm;
   int contador=1;
    public void limpiartabla()
    {
        try {
            dtm=(DefaultTableModel) tbldatos.getModel();
            int a=dtm.getRowCount();
            for (int i = 0; i < a; i++) {
                dtm.removeRow(0);
            }
        }catch(Exception ex){
            System.out.println(ex);
        }
    }
    void rutaactual(){
        
        File path = new File (rutaactual);
        rutaactual=path.getAbsolutePath();
        txtRutaActual.setText(String.valueOf(path.getAbsoluteFile()));
        
    }
    void AgregarDatos(File archivo){
        txtMetadatos.append("*************************************************************************************************");
        txtMetadatos.append("\n");
        txtMetadatos.append("Metadatos del archivo :");
        txtMetadatos.append("\n");
        txtMetadatos.append("*************************************************************************************************");
        txtMetadatos.append("\n");
        txtMetadatos.append("Nombre del archivo: "+ nombre);
        txtMetadatos.append("\n");
        txtMetadatos.append(archivo.canRead() ? "si se puede leer" : "No  se puede leer");
        txtMetadatos.append("\n");
        txtMetadatos.append(archivo.canWrite() ? "si se puede escribir" : "No  se puede escribir"); 
        txtMetadatos.append("\n");
        txtMetadatos.append("la longitud es : " + archivo.length());
        txtMetadatos.append("\n");
        txtMetadatos.append(archivo.getParent()); // direcoorio padre
        txtMetadatos.append("\n");
    }
    boolean opciones(){
        if(cmbopcion.getSelectedItem()=="Word"){
            definicion = "archivos word";
            extension = "docx";
        }
        if(cmbopcion.getSelectedItem()=="Excel"){
            definicion = "archivos excel";
            extension = "xlsx";
        }
        if(cmbopcion.getSelectedItem()=="PowerPoint"){
            definicion = "archivos powerpoint";
            extension = "pptx";
        }
        if(cmbopcion.getSelectedItem()=="Ficheros"){
            definicion = "ficheros";
            extension = "txt";
        }
        if(cmbopcion.getSelectedItem()=="Todos"){
            return false;
        }
        return true;
    }
    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        txtMetadatos.setText("");
        try{
            //Llamamos al metodo que permite cambiar de ventana
            JFileChooser file = new JFileChooser();
            if(opciones() == true){
                //Poder escoger la extension
                FileNameExtensionFilter filter;
                filter = new FileNameExtensionFilter(definicion,extension);
                file.setFileFilter(filter);
            }
            int terminal = file.showOpenDialog(this);
            //Abrimos el archivo seleccionado
            if (terminal == JFileChooser.APPROVE_OPTION){
                File abre = file.getSelectedFile();
                ruta = abre.getAbsolutePath();
                nombre = abre.getName();
                tamanio = (int) abre.length()/1000;
                lblmemoria.setText(String.valueOf(tamanio) + " Kb ");
                
                File path = new File (ruta);
                AgregarDatos(path);
            }else if(terminal == JFileChooser.CANCEL_OPTION){
                JOptionPane.showMessageDialog(null, "No ha seleccionado ningun archivo");
            }
            
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null,"No se ha establecido el archivo por favor intentelo de nuevo"
            , "ADVERTENCIA!!!",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btnSeleccionarActionPerformed
    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        
        try{
            int tamaño_temporal = Integer.parseInt(splimitar.getValue().toString());
            if (tamaño_temporal >= tamanio){
                if (nombre !="") {
                    Path origenPath = FileSystems.getDefault().getPath(ruta);
               Path destinoPath = FileSystems.getDefault().getPath(rutaactual+ "\\\\" +nombre);
               try {
                   Files.copy(origenPath, destinoPath, StandardCopyOption.REPLACE_EXISTING);
               } catch (IOException e) {
                   System.err.println(e);
               }
                File archivo= new File(rutaactual);
                
        if((!archivo.exists() || (archivo.isDirectory()))){
            String[] lista= archivo.list();
            String contenido="";
            for (int i = 0; i < lista.length; i++) {
                  contenido+=lista[i]+"\n";
            }
            txtMetadatos.setText(contenido);
            lbl6.setText(nombre);
            
            String datos[]= new String[4];
            datos[0]=String.valueOf(contador);
            datos[1]=nombre;
            datos[2]=String.valueOf(tamanio);
            datos[3]=rutaactual;
            dtm.addRow(datos);
            contador++;
        }
        else{
            System.err.println("El directorio ya existe");
        }
               JOptionPane.showMessageDialog(null, "Copiado correctamente ");
                }else{
                    JOptionPane.showMessageDialog(null, "Seleccione un archivo");
                }
               
            }else{
                JOptionPane.showMessageDialog(null, "Es muy grande el archivo seleccionado");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Ingrese un numero en la casilla");
        }
        
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void cambiarDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarDestinoActionPerformed
        // TODO add your handling code here:
        try{
            //Llamamos al metodo que permite cambiar de ventana
            JFileChooser directorio = new JFileChooser();
            directorio.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int terminal = directorio.showOpenDialog(this);
            //Abrimos el archivo seleccionado
            if (terminal == JFileChooser.APPROVE_OPTION){
                rutaactual = String.valueOf(directorio.getSelectedFile().getAbsolutePath());
                rutaactual();
            }else if(terminal == JFileChooser.CANCEL_OPTION){
                JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna carpeta");
            }
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null,"No se ha establecido la carpeta por favor intentelo de nuevo"
            , "ADVERTENCIA!!!",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_cambiarDestinoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubirArchivos_PastorM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubirArchivos_PastorM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubirArchivos_PastorM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubirArchivos_PastorM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubirArchivos_PastorM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JButton cambiarDestino;
    private javax.swing.JComboBox<String> cmbopcion;
    private javax.swing.ButtonGroup grupoExtensiones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel lbl6;
    private javax.swing.JLabel lblmemoria;
    private javax.swing.JSpinner splimitar;
    private javax.swing.JTable tbldatos;
    private javax.swing.JTextArea txtMetadatos;
    private javax.swing.JTextField txtRutaActual;
    // End of variables declaration//GEN-END:variables
    String time;
    String Jtreevar;
}
